{"version":3,"sources":["components/Home.js","utils/is-empty.js","assets/audio/correct-answer.mp3","assets/audio/wrong-answer.mp3","assets/audio/button-sound.mp3","components/quiz/Play.js","assets/img/answers.png","components/quiz/QuizInstructions.js","components/quiz/QuizSummary.js","App.js","index.js"],"names":["Home","Helmet","id","style","textAlign","className","to","isEmpty","value","undefined","Object","keys","length","trim","Play","props","displayQuestions","questions","state","currentQuestion","nextQuestion","previoutQuestion","currentQuestionIndex","answer","setState","previousRandomNumbers","showOptions","handleDisabledButton","handleOptionClick","e","target","innerHTML","toLowerCase","setTimeout","correctSound","current","play","correctAnswer","wrongSound","wrongAnswer","handleNextButtonClick","playButtonSound","prevState","handlePreviousButtonClick","handleQuitButtonClick","window","confirm","history","push","handleButtonClick","buttonSound","M","toast","html","classes","displayLength","score","correctAnswers","numberOfAnsweredQuestions","endGame","navigator","vibrate","wrongAnswers","Array","from","document","querySelectorAll","forEach","option","visibility","usedFiftyFifty","handleHints","hints","indexOfAnswer","options","index","randomNumber","Math","round","random","includes","concat","handleFiftyFifty","fiftyFifty","randomNumbers","count","newRandomNumber","startTimer","countDownTime","Date","now","interval","setInterval","distance","minutes","floor","seconds","clearInterval","time","previousButtonDisabled","numberOfQuestions","nextButtonDisabled","alert","playerStats","fiftyFiftyUsed","hintsUsed","React","createRef","this","ref","src","correctNotification","wrongNotification","onClick","question","optionA","optionB","optionC","optionD","classnames","disable","Component","QuizInstructions","image","height","width","alt","QuizSummary","worngAnswers","location","stats","remark","toFixed","App","basename","process","path","exact","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.26ecace9.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\r\nimport {Helmet} from 'react-helmet';\r\nimport { Link } from 'react-router-dom';\r\nconst Home =() =>(\r\n\r\n    <Fragment>\r\n        <Helmet>\r\n            <title>Quik Quiz-Home</title>\r\n        </Helmet>\r\n        <div id=\"home\">\r\n            <section>\r\n                <div style={{textAlign:'center'}}>\r\n                    <span className=\"mdi mdi-cube-outline cube\"></span>\r\n                </div>\r\n                <h1> Quick Quiz</h1>\r\n                <div className=\"play-button-container\">\r\n                    <ul>\r\n                        <li><Link className=\"play-button\" to=\"/play/instructions\">Play</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"auth-container\">\r\n                    <Link className=\"auth-buttons\" id=\"login-button\" to=\"/login\" >Login</Link>\r\n                    <Link className=\"auth-buttons\" id=\"signup-button\" to=\"/register\">Register</Link>    \r\n\r\n                </div>\r\n            </section>\r\n\r\n         </div>\r\n    </Fragment>\r\n\r\n);\r\n\r\nexport default Home;","const isEmpty = (value) =>\r\n  value === undefined ||\r\n  value === null ||\r\n  (typeof value === \"object\" && Object.keys(value).length === 0) ||\r\n  (typeof value === \"string\" && value.trim().length === 0);\r\n\r\nexport default isEmpty;\r\n","export default __webpack_public_path__ + \"static/media/correct-answer.e1cf8406.mp3\";","export default __webpack_public_path__ + \"static/media/wrong-answer.e08b616b.mp3\";","export default __webpack_public_path__ + \"static/media/button-sound.8277ab8c.mp3\";","import React, { Fragment } from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport M from \"materialize-css\";\r\n\r\nimport questions from \"../../questions.json\";\r\nimport isEmpty from \"../../utils/is-empty\";\r\nimport correctNotification from \"../../assets/audio/correct-answer.mp3\";\r\nimport wrongNotification from \"../../assets/audio/wrong-answer.mp3\";\r\nimport buttonSound from \"../../assets/audio/button-sound.mp3\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Play extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      questions,\r\n      currentQuestion: {},\r\n      nextQuestion: {},\r\n      previoutQuestion: {},\r\n      answer: \"\",\r\n      numberOfQuestions: questions.length,\r\n      numberOfAnsweredQuestions: 0,\r\n      currentQuestionIndex: 0,\r\n      score: 0,\r\n      correctAnswers: 0,\r\n      wrongAnswers: 0,\r\n      hints: 5,\r\n      fiftyFifty: 2,\r\n      usedFiftyFifty: false,\r\n      nextButtonDisabled: false,\r\n      previousButtonDisabled: true,\r\n      previousRandomNumbers: [],\r\n      time: {},\r\n    };\r\n    this.interval = null;\r\n    this.correctSound = React.createRef();\r\n    this.wrongSound = React.createRef();\r\n    this.buttonSound = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n    const {\r\n      questions,\r\n      currentQuestion,\r\n      nextQuestion,\r\n      previoutQuestion,\r\n    } = this.state;\r\n\r\n    this.displayQuestions(\r\n      questions,\r\n      currentQuestion,\r\n      nextQuestion,\r\n      previoutQuestion\r\n    );\r\n    this.startTimer();\r\n  }\r\n\r\n  componentWillMount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  displayQuestions = (\r\n    questions = this.state.questions,\r\n    currentQuestion,\r\n    nextQuestion,\r\n    previoutQuestion\r\n  ) => {\r\n    let { currentQuestionIndex } = this.state;\r\n    if (!isEmpty(this.state.questions)) {\r\n      questions = this.state.questions;\r\n      currentQuestion = questions[currentQuestionIndex];\r\n      nextQuestion = questions[currentQuestionIndex + 1];\r\n      previoutQuestion = questions[currentQuestionIndex - 1];\r\n      const answer = currentQuestion.answer;\r\n      this.setState(\r\n        {\r\n          currentQuestion,\r\n          nextQuestion,\r\n          previoutQuestion,\r\n          answer,\r\n          previousRandomNumbers: [],\r\n        },\r\n        () => {\r\n          this.showOptions();\r\n          this.handleDisabledButton();\r\n        }\r\n      );\r\n    }\r\n  };\r\n  handleOptionClick = (e) => {\r\n    if (e.target.innerHTML.toLowerCase() === this.state.answer.toLowerCase()) {\r\n      setTimeout(() => {\r\n        this.correctSound.current.play();\r\n      }, 500);\r\n      this.correctAnswer();\r\n    } else {\r\n      setTimeout(() => {\r\n        this.wrongSound.current.play();\r\n      }, 500);\r\n      this.wrongAnswer();\r\n    }\r\n  };\r\n\r\n  handleNextButtonClick = () => {\r\n    this.playButtonSound();\r\n    if (this.state.nextQuestion !== undefined) {\r\n      this.setState(\r\n        (prevState) => ({\r\n          currentQuestionIndex: prevState.currentQuestionIndex + 1,\r\n        }),\r\n        () => {\r\n          this.displayQuestions(\r\n            this.state.questions,\r\n            this.state.currentQuestion,\r\n            this.state.nextQuestion,\r\n            this.state.previoutQuestion\r\n          );\r\n        }\r\n      );\r\n    }\r\n  };\r\n  handlePreviousButtonClick = () => {\r\n    this.playButtonSound();\r\n    if (this.state.previoutQuestion !== undefined) {\r\n      this.setState(\r\n        (prevState) => ({\r\n          currentQuestionIndex: prevState.currentQuestionIndex - 1,\r\n        }),\r\n        () => {\r\n          this.displayQuestions(\r\n            this.state.questions,\r\n            this.state.currentQuestion,\r\n            this.state.nextQuestion,\r\n            this.state.previoutQuestion\r\n          );\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  handleQuitButtonClick = () => {\r\n    this.playButtonSound();\r\n\r\n    if (window.confirm(\"Are you sure you want to Quit?\")) {\r\n      this.props.history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  handleButtonClick = (e) => {\r\n    switch (e.target.id) {\r\n      case \"next-button\":\r\n        this.handleNextButtonClick();\r\n        break;\r\n      case \"previous-button\":\r\n        this.handlePreviousButtonClick();\r\n        break;\r\n      case \"quit-button\":\r\n        this.handleQuitButtonClick();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  playButtonSound = () => {\r\n    this.buttonSound.current.play();\r\n  };\r\n\r\n  correctAnswer = () => {\r\n    M.toast({\r\n      html: \"Correct Answer!\",\r\n      classes: \"toast-valid\",\r\n      displayLength: 1500,\r\n    });\r\n    this.setState(\r\n      (prevState) => ({\r\n        score: prevState.score + 1,\r\n        correctAnswers: prevState.correctAnswers + 1,\r\n        currentQuestionIndex: prevState.currentQuestionIndex + 1,\r\n        numberOfAnsweredQuestions: prevState.numberOfAnsweredQuestions + 1,\r\n      }),\r\n      () => {\r\n        if (this.state.nextQuestion === undefined) {\r\n          this.endGame();\r\n        } else {\r\n          this.displayQuestions(\r\n            this.state.questions,\r\n            this.state.currentQuestion,\r\n            this.state.nextQuestion,\r\n            this.state.previoutQuestion\r\n          );\r\n        }\r\n      }\r\n    );\r\n  };\r\n  wrongAnswer = () => {\r\n    navigator.vibrate(1000);\r\n    M.toast({\r\n      html: \"Wrong Answer!\",\r\n      classes: \"toast-invalid\",\r\n      displayLength: 1500,\r\n    });\r\n    this.setState(\r\n      (prevState) => ({\r\n        wrongAnswers: prevState.wrongAnswers + 1,\r\n        currentQuestionIndex: prevState.currentQuestionIndex + 1,\r\n        numberOfAnsweredQuestions: prevState.numberOfAnsweredQuestions + 1,\r\n      }),\r\n      () => {\r\n        if (this.state.nextQuestion === undefined) {\r\n          this.endGame();\r\n        } else {\r\n          this.displayQuestions(\r\n            this.state.questions,\r\n            this.state.currentQuestion,\r\n            this.state.nextQuestion,\r\n            this.state.previoutQuestion\r\n          );\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  showOptions = () => {\r\n    const options = Array.from(document.querySelectorAll(\".option\"));\r\n    options.forEach((option) => {\r\n      option.style.visibility = \"visible\";\r\n    });\r\n    this.setState({\r\n      usedFiftyFifty: false,\r\n    });\r\n  };\r\n\r\n  handleHints = () => {\r\n    if (this.state.hints > 0) {\r\n      const options = Array.from(document.querySelectorAll(\".option\"));\r\n      let indexOfAnswer;\r\n      options.forEach((option, index) => {\r\n        if (\r\n          option.innerHTML.toLowerCase() === this.state.answer.toLowerCase()\r\n        ) {\r\n          indexOfAnswer = index;\r\n        }\r\n      });\r\n      while (true) {\r\n        const randomNumber = Math.round(Math.random() * 3);\r\n        if (\r\n          randomNumber !== indexOfAnswer &&\r\n          !this.state.previousRandomNumbers.includes(randomNumber)\r\n        ) {\r\n          options.forEach((option, index) => {\r\n            if (index === randomNumber) {\r\n              option.style.visibility = \"hidden\";\r\n              this.setState((prevState) => ({\r\n                hints: prevState.hints - 1,\r\n                previousRandomNumbers: prevState.previousRandomNumbers.concat(\r\n                  randomNumber\r\n                ),\r\n              }));\r\n            }\r\n          });\r\n          break;\r\n        }\r\n        if (this.state.previousRandomNumbers.length >= 3) break;\r\n      }\r\n    }\r\n  };\r\n\r\n  handleFiftyFifty = () => {\r\n    if (this.state.fiftyFifty > 0 && this.state.usedFiftyFifty === false) {\r\n      const options = document.querySelectorAll(\".option\");\r\n      const randomNumbers = [];\r\n      let indexOfAnswer;\r\n      options.forEach((option, index) => {\r\n        if (\r\n          option.innerHTML.toLowerCase() === this.state.answer.toLowerCase()\r\n        ) {\r\n          indexOfAnswer = index;\r\n        }\r\n      });\r\n      let count = 0;\r\n      do {\r\n        const randomNumber = Math.round(Math.random() * 3);\r\n        if (randomNumber !== indexOfAnswer) {\r\n          if (\r\n            randomNumbers.length < 2 &&\r\n            !randomNumbers.includes(randomNumber) &&\r\n            !randomNumbers.includes(indexOfAnswer)\r\n          ) {\r\n            randomNumbers.push(randomNumber);\r\n            count++;\r\n          } else {\r\n            while (true) {\r\n              const newRandomNumber = Math.round(Math.random() * 3);\r\n              if (\r\n                !randomNumbers.includes(newRandomNumber) &&\r\n                !randomNumbers.includes(indexOfAnswer)\r\n              ) {\r\n                randomNumbers.push(newRandomNumber);\r\n                count++;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      } while (count < 2);\r\n      options.forEach((option, index) => {\r\n        if (randomNumbers.includes(index)) {\r\n          option.style.visibility = \"hidden\";\r\n        }\r\n      });\r\n      this.setState((prevState) => ({\r\n        fiftyFifty: prevState.fiftyFifty - 1,\r\n        usedFiftyFifty: true,\r\n      }));\r\n    }\r\n  };\r\n\r\n  startTimer = () => {\r\n    const countDownTime = Date.now() + 180000;\r\n    this.interval = setInterval(() => {\r\n      const now = new Date();\r\n      const distance = countDownTime - now;\r\n      const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n      const seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n      if (distance < 0) {\r\n        clearInterval(this.interval);\r\n        this.setState(\r\n          {\r\n            time: {\r\n              minutes: 0,\r\n              seconds: 0,\r\n            },\r\n          },\r\n          () => {\r\n            this.endGame();\r\n          }\r\n        );\r\n      } else {\r\n        this.setState({\r\n          time: {\r\n            minutes,\r\n            seconds,\r\n          },\r\n        });\r\n      }\r\n    }, 1000);\r\n  };\r\n  handleDisabledButton = () => {\r\n    if (\r\n      this.state.previoutQuestion === undefined ||\r\n      this.state.currentQuestionIndex === 0\r\n    ) {\r\n      this.setState({\r\n        previousButtonDisabled: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        previousButtonDisabled: false,\r\n      });\r\n    }\r\n    if (\r\n      this.state.nextQuestion === undefined ||\r\n      this.state.currentQuestionIndex + 1 === this.state.numberOfQuestions\r\n    ) {\r\n      this.setState({\r\n        nextButtonDisabled: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        nextButtonDisabled: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  endGame = () => {\r\n    alert(\"Quiz has ended!\");\r\n    const { state } = this;\r\n    const playerStats = {\r\n      score: state.score,\r\n      numberOfQuestions: state.numberOfQuestions,\r\n      numberOfAnsweredQuestions: state.numberOfAnsweredQuestions,\r\n      correctAnswers: state.correctAnswers,\r\n      wrongAnswers: state.wrongAnswers,\r\n      fiftyFiftyUsed: 2 - state.fiftyFifty,\r\n      hintsUsed: 5 - state.hints,\r\n    };\r\n\r\n    setTimeout(() => {\r\n      this.props.history.push(\"/play/quizSummary\", playerStats);\r\n    }, 1000);\r\n  };\r\n  render() {\r\n    const {\r\n      currentQuestion,\r\n      currentQuestionIndex,\r\n      numberOfQuestions,\r\n      hints,\r\n      fiftyFifty,\r\n      time,\r\n    } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <Helmet>\r\n          <title>Quiz Page</title>\r\n        </Helmet>\r\n        <Fragment>\r\n          <audio ref={this.correctSound} src={correctNotification}></audio>\r\n          <audio ref={this.wrongSound} src={wrongNotification}></audio>\r\n          <audio ref={this.buttonSound} src={buttonSound}></audio>\r\n        </Fragment>\r\n        <div className=\"questions\">\r\n          <h2>Quiz Mode</h2>\r\n          <div className=\"lifeline-container\">\r\n            <p>\r\n              <span\r\n                onClick={this.handleFiftyFifty}\r\n                className=\"mdi mdi-set-center mdi-24px lifeline-icon\"\r\n              >\r\n                <span className=\"lifeline\"> {fiftyFifty}</span>\r\n              </span>\r\n            </p>\r\n            <p>\r\n              <span\r\n                onClick={this.handleHints}\r\n                className=\"mdi mdi-lightbulb-on-outline mdi-24px lifeline-icon\"\r\n              >\r\n                <span className=\"lifeline\">{hints}</span>\r\n              </span>\r\n            </p>\r\n          </div>\r\n          <div>\r\n            <p>\r\n              <span className=\"left\">\r\n                {currentQuestionIndex + 1} of {numberOfQuestions}{\" \"}\r\n              </span>\r\n\r\n              <span className=\"right\">\r\n                {time.minutes}:{time.seconds}\r\n                <span className=\"mdi mdi-clock-outline mdi-24px\"> </span>\r\n              </span>\r\n            </p>\r\n          </div>\r\n          <h5>{currentQuestion.question}</h5>\r\n          <div className=\"options-container\">\r\n            <p onClick={this.handleOptionClick} className=\"option\">\r\n              {currentQuestion.optionA}\r\n            </p>\r\n            <p onClick={this.handleOptionClick} className=\"option\">\r\n              {currentQuestion.optionB}\r\n            </p>\r\n          </div>\r\n          <div className=\"options-container\">\r\n            <p onClick={this.handleOptionClick} className=\"option\">\r\n              {currentQuestion.optionC}\r\n            </p>\r\n            <p onClick={this.handleOptionClick} className=\"option\">\r\n              {currentQuestion.optionD}\r\n            </p>\r\n          </div>\r\n          <div className=\"button-container\">\r\n            <button\r\n              className={classnames(\"\", {\r\n                disable: this.state.previousButtonDisabled,\r\n              })}\r\n              id=\"previous-button\"\r\n              onClick={this.handleButtonClick}\r\n            >\r\n              Previous\r\n            </button>\r\n            <button\r\n              className={classnames(\"\", {\r\n                disable: this.state.nextButtonDisabled,\r\n              })}\r\n              id=\"next-button\"\r\n              onClick={this.handleButtonClick}\r\n            >\r\n              Next\r\n            </button>\r\n            <button id=\"quit-button\" onClick={this.handleButtonClick}>\r\n              Quit\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nexport default Play;\r\n","export default __webpack_public_path__ + \"static/media/answers.e4f1b32b.png\";","import React, { Component, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport image from \"../../assets/img/answers.png\";\r\n\r\nconst QuizInstructions = () => (\r\n  <Fragment>\r\n    <Helmet>\r\n      <title>Quiz Instructions- Quick Quiz</title>\r\n    </Helmet>\r\n\r\n    <div className=\"instructions container\">\r\n      <h1>How to Play the Game</h1>\r\n      <p>Ensure you read this guide from start to finish</p>\r\n      <ul className=\"browser-default\" id=\"main-list\">\r\n        <li>\r\n          The game has a duration of 15 minutes and ends as soon as your time\r\n          elapses.\r\n        </li>\r\n        <li>Each game consist of 15 questions.</li>\r\n        <li>\r\n          Every questions contains 4 options.\r\n          <br></br>\r\n          <img\r\n            src={image}\r\n            style={{ height: \"300px\", width: \"600px\" }}\r\n            alt=\"Quiz App  options example\"\r\n          />\r\n        </li>\r\n        <li>\r\n          Select the option which best answers the question by clicking (or\r\n          selecting) it.\r\n          <img\r\n            src={image}\r\n            style={{ height: \"300px\", width: \"600px\" }}\r\n            alt=\"Quiz App  options example\"\r\n          />\r\n        </li>\r\n        <li>\r\n          Each game has 2 lifelines namely:\r\n          <ul id=\"sublist\">\r\n            <li>2 50-50 chances.</li>\r\n            <li>5 Hints.</li>\r\n          </ul>\r\n        </li>\r\n        <li>\r\n          Selecting a 50-50 lifeline by clicking the icon\r\n          <span className=\"mdi mdi-set-center mdi-24px lifeline-icon\"></span>\r\n          will remove 2 wrong answers, leaving the correct answer and one wrong\r\n          answer.\r\n          <img\r\n            src={image}\r\n            style={{ height: \"300px\", width: \"600px\" }}\r\n            alt=\"Quiz App  options example\"\r\n          />\r\n        </li>\r\n        <li>\r\n          Using a hint by clicking icon\r\n          <span className=\"mdi mdi-lightbulb-on mdi-24px lifeline-icon\"></span>\r\n          will remove one wrong answer leaving two wrong answers and one correct\r\n          answer. You can use as many hints as possible on a single question.\r\n          <br />\r\n          <img\r\n            src={image}\r\n            style={{ height: \"300px\", width: \"600px\" }}\r\n            alt=\"Quiz App  options example\"\r\n          />\r\n        </li>\r\n        <li>\r\n          Feel free to quit(or retire from) the game at any time. In that case\r\n          your score will be revealed afterwards.\r\n        </li>\r\n        <li>The timer starts as soon as the game loads.</li>\r\n        <li>Let's do this if you think you've got what it takes?</li>\r\n      </ul>\r\n      <div>\r\n        <span className=\"left\">\r\n          <Link to=\"/\">No take me Back</Link>\r\n        </span>\r\n        <span className=\"right\">\r\n          <Link to=\"/play/quiz\">Okay, Let's do this!</Link>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </Fragment>\r\n);\r\nexport default QuizInstructions;\r\n","import React, { Fragment } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass QuizSummary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      score: 0,\r\n      numberOfQuestions: 0,\r\n      numberOfAnsweredQuestions: 0,\r\n      correctAnswers: 0,\r\n      worngAnswers: 0,\r\n      hintsUsed: 0,\r\n      fiftyFiftyUsed: 0,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const { state } = this.props.location;\r\n    if (state) {\r\n      this.setState({\r\n        ...state,\r\n        score: (state.score / state.numberOfQuestions) * 100,\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    const { state } = this.props.location;\r\n    let stats, remark;\r\n    if (state) {\r\n      if (state.score <= 30) {\r\n        remark = \"You need more Practice!\";\r\n      } else if (state.score > 30 && state.score <= 50) {\r\n        remark = \"Better luck next Time!\";\r\n      } else if (state.score > 50 && state.score <= 70) {\r\n        remark = \"You can do better\";\r\n      } else if (state.score >= 71 && state.score <= 84) {\r\n        remark = \"You did great!\";\r\n      } else {\r\n        remark = \"You're an absolute genius!\";\r\n      }\r\n    }\r\n    if (state !== undefined) {\r\n      stats = (\r\n        <Fragment>\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <span className=\"mdi mdi-check-circle-outline success-icon\"></span>\r\n          </div>\r\n          <h1>Quiz has ended</h1>\r\n          <div className=\"container stats\">\r\n            <h4>{remark}</h4>\r\n            <h2>Your Score: {this.state.score.toFixed(0)}&#37;</h2>\r\n            <span className=\"stat left\">Total number of questions:</span>\r\n            <span className=\"right\">{this.state.numberOfQuestions}</span>\r\n            <br />\r\n            <span className=\"stat left\">\r\n              Total number of Attempted Questions:\r\n            </span>\r\n            <span className=\"right\">\r\n              {this.state.numberOfAnsweredQuestions}\r\n            </span>\r\n            <br />\r\n            <span className=\"stat left\">Total number of Correct Answers:</span>\r\n            <span className=\"right\">{this.state.correctAnswers}</span>\r\n            <br />\r\n            <span className=\"stat left\">Total number of Wrong Answers:</span>\r\n            <span className=\"right\">{this.state.wrongAnswers}</span>\r\n            <br />\r\n            <span className=\"stat left\">Hints Used:</span>\r\n            <span className=\"right\">{this.state.hintsUsed}</span>\r\n            <br />\r\n            <span className=\"stat left\">50-50 Used:</span>\r\n            <span className=\"right\">{this.state.fiftyFiftyUsed}</span>\r\n            <br />\r\n          </div>\r\n          <section>\r\n            <ul className=\"summaryButtons\">\r\n              <li className=\"leftButton\">\r\n                <Link to=\"/play/quiz\">Play Again</Link>\r\n              </li>\r\n              <li className=\"rightButton\">\r\n                <Link to=\"/\">Back To Home</Link>\r\n              </li>\r\n            </ul>\r\n          </section>\r\n        </Fragment>\r\n      );\r\n    } else {\r\n      stats = (\r\n        <section>\r\n          <h1 className=\"no-stats\">No Statistics Available</h1>\r\n          <ul className=\"summaryButtons\">\r\n            <li className=\"leftButton\">\r\n              <Link to=\"/play/quiz\">Play Again</Link>\r\n            </li>\r\n            <li className=\"rightButton\">\r\n              <Link to=\"/\">Back To Home</Link>\r\n            </li>\r\n          </ul>\r\n        </section>\r\n      );\r\n    }\r\n    return (\r\n      <Fragment>\r\n        <Helmet>\r\n          <title>Quick Quiz-Summary</title>\r\n        </Helmet>\r\n        {stats}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nexport default QuizSummary;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Play from \"./components/quiz/Play\";\nimport QuizInstructions from \"./components/quiz/QuizInstructions\";\nimport QuizSummary from \"./components/quiz/QuizSummary\";\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/play/instructions\" exact component={QuizInstructions} />\n      <Route path=\"/play/quiz\" exact component={Play} />\n      <Route path=\"/play/quizSummary\" exact component={QuizSummary} />\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/styles.scss\";\nimport App from \"./App\";\nimport \"../node_modules/@mdi/font/css/materialdesignicons.min.css\";\nimport \"../node_modules/materialize-css/dist/css/materialize.min.css\";\nimport \"../node_modules/materialize-css/dist/js/materialize.min.js\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}